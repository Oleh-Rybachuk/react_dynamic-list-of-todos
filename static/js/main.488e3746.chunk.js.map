{"version":3,"sources":["api.ts","types/FilterBy.ts","components/TodoComponent/TodoComponent.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/LoaderError/LoadingError.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterBy","getUser","userId","TodoComponent","todo","isSelectedTodo","onTodoSelected","id","title","completed","className","classNames","type","onClick","TodoList","todos","selectedTodo","map","filterByOptions","Object","values","TodoFilter","query","statusFilter","onQueryChange","onStatusFilterChange","value","onChange","event","currentTarget","placeholder","style","pointerEvents","Loader","LoadingError","TodoModal","onClose","useState","user","setUser","isLoading","setIsLoading","hasLoadingError","setHasLoadingError","useEffect","loadUserInfo","userID","a","loadedUser","href","email","name","App","setTodos","loading","setLoading","setSelectedTodo","setQuery","All","filterBy","setFilterBy","loadTodos","todosFromServer","filterTodos","useCallback","todosArg","queryArg","filterByArg","filteredTodos","filter","toLocaleLowerCase","includes","Completed","Active","visibleTodos","useMemo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.488e3746.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterBy {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  isSelectedTodo: boolean;\n  onTodoSelected: (todo: Todo) => void;\n};\n\nexport const TodoComponent: React.FC<Props> = ({\n  todo,\n  isSelectedTodo,\n  onTodoSelected,\n}) => {\n  const { id, title, completed } = todo;\n\n  return (\n    <tr\n      key={id}\n      data-cy=\"todo\"\n    >\n      <td className=\"is-vcentered\">\n        {id}\n      </td>\n      <td className=\"is-vcentered\">\n        {completed\n          && (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames(\n          { 'has-text-danger': !completed },\n          { 'has-text-success': completed },\n        )}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onTodoSelected(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames(\n              'far',\n              { 'fa-eye': !isSelectedTodo },\n              { 'fa-eye-slash': isSelectedTodo },\n            )}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoComponent } from '../TodoComponent/TodoComponent';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onTodoSelected: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onTodoSelected,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const isSelectedTodo = selectedTodo === todo;\n\n        return (\n          <TodoComponent\n            todo={todo}\n            isSelectedTodo={isSelectedTodo}\n            onTodoSelected={onTodoSelected}\n          />\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\nimport { FilterBy } from '../../types/FilterBy';\n\nconst filterByOptions = Object.values(FilterBy);\n\ntype Props = {\n  query: string;\n  onQueryChange: (newQuery: string) => void;\n  statusFilter: FilterBy;\n  onStatusFilterChange: (newFilterBy: FilterBy) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  statusFilter,\n  onQueryChange,\n  onStatusFilterChange,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onStatusFilterChange(event.currentTarget.value as FilterBy);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onQueryChange(event.currentTarget.value);\n  };\n\n  const handleQueryReset = () => {\n    onQueryChange('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={statusFilter}\n            onChange={handleFilterChange}\n          >\n            <option value={filterByOptions[0]}>All</option>\n            <option value={filterByOptions[1]}>Active</option>\n            <option value={filterByOptions[2]}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              aria-label=\"Reset\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleQueryReset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\n\nexport const LoadingError: React.FC = () => (\n  <div className=\"notification is-danger is-light\">\n    Oh no!\n    Something went wrong. It&apos;s not your fault, it&apos;s our fault.\n    Sorry about that.!\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { LoadingError } from '../LoaderError/LoadingError';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onClose,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  useEffect(() => {\n    const loadUserInfo = async (userID: number) => {\n      setIsLoading(true);\n\n      try {\n        const loadedUser = await getUser(userID);\n\n        setUser(loadedUser);\n      } catch (error) {\n        setHasLoadingError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadUserInfo(userId);\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && (\n        <Loader />\n      )}\n\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={classNames(\n                { 'has-text-danger': !completed },\n                { 'has-text-success': completed },\n              )}\n              >\n                {completed ? ('Done') : ('Planned')}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n\n      {hasLoadingError && (\n        <>\n          <LoadingError />\n\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={onClose}\n          >\n            Close\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect, useMemo, useState, useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterBy } from './types/FilterBy';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { LoadingError } from './components/LoaderError/LoadingError';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState(FilterBy.All);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      setLoading(true);\n\n      try {\n        const todosFromServer = await getTodos();\n\n        setTodos(todosFromServer);\n      } catch (error) {\n        setHasLoadingError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadTodos();\n  }, []);\n\n  const filterTodos = useCallback((\n    todosArg: Todo[],\n    queryArg: string,\n    filterByArg: FilterBy,\n  ) => {\n    let filteredTodos = [...todosArg];\n\n    if (queryArg) {\n      filteredTodos = filteredTodos.filter(todo => (\n        todo.title.toLocaleLowerCase().includes(queryArg.toLocaleLowerCase())\n      ));\n    }\n\n    switch (filterByArg) {\n      case FilterBy.Completed:\n        filteredTodos = filteredTodos.filter(todo => todo.completed);\n        break;\n\n      case FilterBy.Active:\n        filteredTodos = filteredTodos.filter(todo => !todo.completed);\n        break;\n\n      default:\n        break;\n    }\n\n    return filteredTodos;\n  }, []);\n\n  const visibleTodos = useMemo(() => filterTodos(todos, query, filterBy), [todos, query, filterBy]);\n\n  const handleSelectedTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleModalCloseButtonClick = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                statusFilter={filterBy}\n                onStatusFilterChange={setFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? (\n                  <Loader />\n                )\n                : (\n                  <>\n                    {visibleTodos.length > 0\n                      ? (\n                        <TodoList\n                          todos={visibleTodos}\n                          selectedTodo={selectedTodo}\n                          onTodoSelected={handleSelectedTodo}\n                        />\n                      )\n                      : (\n                        <p>\n                          Not found any todos\n                        </p>\n                      )}\n\n                    {hasLoadingError && (\n                      <LoadingError />\n                    )}\n                  </>\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={handleModalCloseButtonClick}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}